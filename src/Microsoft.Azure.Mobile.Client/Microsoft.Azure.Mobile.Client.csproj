<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\build\Microsoft.Azure.Mobile.Client.Build.props" />

  <PropertyGroup>
    <TargetFrameworks>
		netstandard1.4;netstandard1.1;net45
	</TargetFrameworks>
    <DefaultLanguage>en-US</DefaultLanguage>
    <CopyLocalLockFileAssemblies>false</CopyLocalLockFileAssemblies>
    <Version>4.0.1</Version>
    <PackageTitle>Azure Mobile Client SDK</PackageTitle>
    <Title>Azure Mobile Client SDK</Title>
    <Authors>Microsoft, azure-sdk</Authors>
    <Product>Loqu8.Azure.Mobile.Client (netstandard1.4)</Product>
    <PackageLicenseUrl>http://go.microsoft.com/fwlink/?LinkId=286110</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/Azure/azure-mobile-apps-net-client</PackageProjectUrl>
    <PackageIconUrl>http://go.microsoft.com/fwlink/?LinkID=288890</PackageIconUrl>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <Description>This library provides features for creating Windows and Xamarin mobile apps that connect to Azure Mobile Apps. Azure Mobile Apps allows you to develop an app with a scalable backed hosted in Azure App Service, with support for mobile authentication, offline sync, and push notifications. To learn more about Azure Mobile, go to http://azure.microsoft.com/mobile. </Description>
    <Summary>Azure Mobile Apps SDK</Summary>
    <PackageReleaseNotes>https://github.com/Azure/azure-mobile-apps-net-client/blob/master/CHANGELOG.md</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/Azure/azure-mobile-apps-net-client</RepositoryUrl>
    <PackageTags>microsoft;windows;azure;mobile;apps;services;windowsazureofficial</PackageTags>
    <GenerateDocumentationFile Condition=" '$(Configuration)' == 'Release' ">true</GenerateDocumentationFile>
    <!-- Workaround until Xamarin supports PPDB -->
    <DebugType>full</DebugType>
    <RootNamespace>Microsoft.WindowsAzure.MobileServices</RootNamespace>
    <PackageId>Loqu8.Azure.Mobile.Client</PackageId>
  </PropertyGroup>
  <ItemGroup>
    <!-- Need this to see the parent refs to Auth -->
    <ProjectCapability Include="ShowFilesOutsideOfProject" />
    <!-- This None is here so the conditinonally included files show up in the Solution Explorer -->
    <None Include="**\*.cs;**\*.xml;**\*.axml" Exclude="obj\**\*.*;bin\**\*.*" />
    <None Include="..\External\Xamarin.Auth\src\**\*.cs" Exclude="..\External\Xamarin.Auth\src\Xamarin.Auth\AssemblyInfo.cs" />
		<Compile Remove="Platforms\**\*.*" />
    	<Compile Remove="Features\**\*.*" />

    <EmbeddedResource Include="Properties\*.rd.xml" />

	<Compile Update="Resources.Designer.cs" DesignTime="true" AutoGen="true" DependentUpon="Resources.resx" />

	<!--<Compile DesignTime="true" AutoGen="true" DependentUpon="Resources.resx" />-->

	<EmbeddedResource Update="Resources.resx" Generator="ResXFileCodeGenerator" LastGenOutput="Resources.Designer.cs" />

	<!--<EmbeddedResource Generator="ResXFileCodeGenerator" LastGenOutput="Resources.Designer.cs" />-->
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>04fc5444-1240-41d7-9aa8-648b9a465c9d</ProjectGuid>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MSBuild.Sdk.Extras" Version="1.0.0" PrivateAssets="All" />
    <PackageReference Include="Newtonsoft.Json" Version="9.0.1" />
    <PackageReference Include="System.Runtime.Extensions" Version="4.3.0" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'uap10.0' ">
    <PackageReference Include="Microsoft.NETCore.UniversalWindowsPlatform" Version="5.2.3" />
    <PackageReference Include="System.Linq.Queryable" Version="4.0.1" />
    <Compile Include="Platforms\uwp\**\*.cs" Exclude="Platforms\uwp\Extensions\MobileServiceCollectionViewExtensions.cs" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.4' or '$(TargetFramework)' == 'netstandard1.1' ">
    <PackageReference Include="System.Linq.Queryable" Version="4.3.0" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System.Net.Http" />
    <Compile Include="Platforms\net45\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.4' ">
    <Compile Include="Platforms\netstandard1_4\**\*.cs" />
  </ItemGroup>
  <!--<Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />-->
</Project>
